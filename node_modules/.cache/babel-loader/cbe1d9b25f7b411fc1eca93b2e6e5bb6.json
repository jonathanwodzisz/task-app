{"ast":null,"code":"var _jsxFileName = \"/Users/jonwodzisz/Desktop/GitHub/task-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header.js';\nimport Tasks from './components/Tasks';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3002/tasks');\n    const data = await res.json();\n    return data;\n  }; //toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:3002/tasks');\n      const data = await res.json();\n      return data;\n    };\n  }; //Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:3002/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); //const id = Math.floor(Math.random() * 10000) + 1;\n    //const newTask = { id, ...task };\n    //setTasks([...tasks, newTask]);\n  }; //Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:3002/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      onDelete: deleteTask,\n      tasks: tasks,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }, this) : 'No Tasks Yet']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonwodzisz/Desktop/GitHub/task-app/src/App.js"],"names":["Header","Tasks","useState","useEffect","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","toggleReminder","id","map","task","reminder","addTask","method","headers","body","JSON","stringify","deleteTask","filter","length"],"mappings":"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","sourcesContent":["import Header from './components/Header.js'\nimport Tasks from './components/Tasks'\nimport './App.css';\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3002/tasks');\n    const data = await res.json();\n    return data;\n  }\n  //toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:3002/tasks');\n      const data = await res.json();\n      return data;\n    }\n  }\n  //Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:3002/tasks', {\n      method: 'POST', headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify(task)\n    })\n    const data = await res.json();\n    setTasks([...tasks, data]);\n    //const id = Math.floor(Math.random() * 10000) + 1;\n    //const newTask = { id, ...task };\n    //setTasks([...tasks, newTask]);\n\n  }\n  //Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:3002/tasks/${id}`, { method: 'DELETE' })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n  return (\n    <div className=\"container\">\n      <Header title=\"Task\" onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks onDelete={deleteTask} tasks={tasks} onToggle={toggleReminder} /> : 'No Tasks Yet'}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}