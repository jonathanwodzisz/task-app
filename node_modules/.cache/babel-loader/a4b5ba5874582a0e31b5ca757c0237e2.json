{"ast":null,"code":"var _jsxFileName = \"/Users/jonwodzisz/Desktop/GitHub/task-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header.js';\nimport Tasks from './components/Tasks';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {}, []); //toggle reminder\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; //Add Task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      onDelete: deleteTask,\n      tasks: tasks,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }, this) : 'No Tasks Yet']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonwodzisz/Desktop/GitHub/task-app/src/App.js"],"names":["Header","Tasks","useState","useEffect","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","toggleReminder","id","map","task","reminder","addTask","Math","floor","random","newTask","deleteTask","filter","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT,CAHa,CAKb;;AACA,QAAMO,cAAc,GAAIC,EAAD,IAAQ;AAC7BF,IAAAA,QAAQ,CAACD,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGE,IAAL;AAAWC,MAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAA3B,KAAjB,GAAyDD,IAA7E,CAAD,CAAR;AACD,GAFD,CANa,CASb;;;AACA,QAAME,OAAO,GAAIF,IAAD,IAAU;AACxB,UAAMF,EAAE,GAAGK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAER,MAAAA,EAAF;AAAM,SAAGE;AAAT,KAAhB;AACAJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWW,OAAX,CAAD,CAAR;AACD,GAJD,CAVa,CAeb;;;AACA,QAAMC,UAAU,GAAIT,EAAD,IAAQ;AACzBF,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcR,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAE,MAAMJ,cAAc,CAAC,CAACD,WAAF,CAAhD;AAAgE,MAAA,OAAO,EAAEA;AAAzE;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGGP,KAAK,CAACc,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEF,UAAjB;AAA6B,MAAA,KAAK,EAAEZ,KAApC;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAA6F,cAHhG;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA1BQL,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header.js'\nimport Tasks from './components/Tasks'\nimport './App.css';\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([])\n  useEffect(() => {\n  }, []);\n  //toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  }\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n  return (\n    <div className=\"container\">\n      <Header title=\"Task\" onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks onDelete={deleteTask} tasks={tasks} onToggle={toggleReminder} /> : 'No Tasks Yet'}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}