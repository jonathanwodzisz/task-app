{"ast":null,"code":"var _jsxFileName = \"/Users/jonwodzisz/Desktop/GitHub/task-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header.js';\nimport Tasks from './components/Tasks';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'School',\n    day: 'Feb 6th at 1:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Food',\n    day: 'Feb 5th at 2:30am',\n    reminder: false\n  }]); //toggle reminder\n\n  const toggleReminder = id => {\n    setTasks(task.map(task => task.id === id ? { ...task,\n      reminder\n    } : task));\n  }; //Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      onDelete: deleteTask,\n      tasks: tasks,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this) : 'No Tasks Yet']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jNdayY/l0GR64fRC2nh4VFqEG/Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonwodzisz/Desktop/GitHub/task-app/src/App.js"],"names":["Header","Tasks","useState","App","tasks","setTasks","id","text","day","reminder","toggleReminder","task","map","deleteTask","filter","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAChC,CACE;AACEI,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,qBAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADF,EAOE;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPF,EAaE;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAbF,CADgC,CAAlC,CADa,CAsBb;;AACA,QAAMC,cAAc,GAAIJ,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACM,IAAI,CAACC,GAAL,CAAUD,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGK,IAAL;AAAWF,MAAAA;AAAX,KAAjB,GAAyCE,IAA5D,CAAD,CAAR;AACD,GAFD,CAvBa,CA0Bb;;;AACA,QAAME,UAAU,GAAIP,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAAK,CAACW,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEF,UAAjB;AAA6B,MAAA,KAAK,EAAET,KAApC;AAA2C,MAAA,QAAQ,EAAEM;AAArD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAA6F,cAFhG;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApCQP,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header.js'\nimport Tasks from './components/Tasks'\nimport './App.css';\nimport { useState } from 'react'\n\nfunction App() {\n  const [tasks, setTasks] = useState(\n    [\n      {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n      },\n      {\n        id: 2,\n        text: 'School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n      },\n      {\n        id: 3,\n        text: 'Food',\n        day: 'Feb 5th at 2:30am',\n        reminder: false,\n      }\n    ])\n  //toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(task.map((task) => task.id === id ? { ...task, reminder } : task))\n  }\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n  return (\n    <div className=\"container\">\n      <Header title=\"Task\" />\n      {tasks.length > 0 ? <Tasks onDelete={deleteTask} tasks={tasks} onToggle={toggleReminder} /> : 'No Tasks Yet'}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}