{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","toggleReminder","taskToToggle","updTask","method","headers","body","JSON","stringify","addTask","deleteTask","filter","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b5ccb81.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Button({ text, color, onClick }) {\n    return (\n        <button onClick={onClick} className=\"btn\" style={{ backgroundColor: color, }}>{text}</button >\n    )\n}\nButton.defaultProps = {\n    color: \"black\",\n    text: \"btn\",\n}\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\nimport { useLocation } from 'react-router-dom'\n\nfunction Header({ title, onAdd, showAdd }) {\n    const location = useLocation();\n    return (\n        <header className=\"header\">\n            <h1 /*css in jsx use style{{properties in here}}*/>{title}</h1>\n            {location.pathname === '/' && <Button text={showAdd ? 'close' : \"Add\"} color={showAdd ? \"red\" : \"green\"} onClick={onAdd} />}\n        </header>\n    )\n}\nHeader.defaultProps = {\n    title: \"Task\",\n}\nHeader.propTypes = {\n    title: PropTypes.string,\n    //use .isRequired to make the prop required\n}\nexport default Header;","import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\n\nfunction Task({ task, onDelete, onToggle }) {\n    return (\n        <div className={`task ${task.reminder ?\n            'reminder' : ''} `}\n            onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text}<FaTimes style={{ color: \"red\", cursor: \"pointer\" }} onClick={() => onDelete(task.id)} /></h3>\n            <p>{task.day}</p>\n        </div >\n    )\n}\n\nexport default Task\n","import React from 'react'\nimport Task from './Task.js'\n\nfunction Tasks({ tasks, onDelete, onToggle }) {\n\n    return (\n        <>\n            {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />))}\n        </>\n    )\n}\nTasks.defaultProps = {\n    tasks: \"hello\"\n}\nexport default Tasks\n","import React from 'react'\nimport { useState } from 'react'\n\nfunction AddTask({ onAdd }) {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (!text) {\n            alert('Please add task')\n            return\n        }\n        onAdd({ text, day, reminder })\n        setText('');\n        setDay('');\n        setReminder(false);\n    }\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className=\"form-control\">\n                <label>Day & time</label>\n                <input type=\"text\" placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n            <input className=\"btn btn-block\" type='submit' value=\"Save Task\" />\n        </form>\n    )\n}\n\nexport default AddTask\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Footer() {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to=\"/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction About() {\n    return (\n        <div>\n            <h5>version 1.0.0</h5>\n            <Link to=\"/\">BACK TO TASK</Link>\n        </div>\n    )\n}\n\nexport default About\n","import Header from './components/Header.js'\nimport Tasks from './components/Tasks'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n//import { router } from 'json-server';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3002/tasks');\n    const data = await res.json();\n    return data;\n  }\n  //Fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:3002/tasks/${id}`);\n    const data = await res.json();\n    return data\n  }\n  //toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(`http://localhost:3002/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n    const data = await res.json();\n\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n  }\n  //Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:3002/tasks', {\n      method: 'POST', headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify(task)\n    })\n    const data = await res.json();\n    setTasks([...tasks, data]);\n    //const id = Math.floor(Math.random() * 10000) + 1;\n    //const newTask = { id, ...task };\n    //setTasks([...tasks, newTask]);\n\n  }\n  //Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:3002/tasks/${id}`, { method: 'DELETE' })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header title=\"Task\" onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n\n        <Route path='/' exact render={(props) => (<>\n          {showAddTask && <AddTask onAdd={addTask} />}\n          {tasks.length > 0 ? <Tasks onDelete={deleteTask} tasks={tasks} onToggle={toggleReminder} /> : 'No Tasks Yet'}\n        </>)} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router >\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}